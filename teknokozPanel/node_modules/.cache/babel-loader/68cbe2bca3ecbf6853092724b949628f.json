{"ast":null,"code":"import axios from \"axios\";\nimport router from \"@/router\";\nexport default {\n  name: \"newCategoryView\",\n\n  data() {\n    return {\n      newCategory: {\n        name: '',\n        image1: null,\n        content: ''\n      }\n    };\n  },\n\n  methods: {\n    createNewCategory() {\n      let formdata = new FormData();\n\n      if (this.newCategory.image1 !== null) {\n        formdata.append('image1', this.newCategory.image1);\n      }\n\n      formdata.append('name', this.newCategory.name);\n      formdata.append('content', this.newCategory.content);\n      axios.post('http://127.0.0.1:8000/api/category', formdata, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem('token'),\n          'Content-Type': \"multipart/form-data; charset=utf-8\"\n        }\n      }).then(response => {\n        let timerInterval;\n        this.$swal.fire({\n          toast: true,\n          text: response.data,\n          timer: 1100,\n          icon: 'success',\n          position: 'top-end',\n          timerProgressBar: true,\n          showConfirmButton: false,\n          willClose: () => {\n            clearInterval(timerInterval);\n          }\n        });\n        setTimeout(function () {\n          router.push(\"/category\");\n        }, 1600);\n      }).catch(error => {\n        let timerInterval;\n        this.$swal.fire({\n          text: error.response.data.message,\n          timer: 1000,\n          toast: true,\n          icon: 'error',\n          position: 'top-end',\n          timerProgressBar: true,\n          showConfirmButton: false,\n          willClose: () => {\n            clearInterval(timerInterval);\n          }\n        });\n      });\n    },\n\n    uploadFile(e) {\n      if (this.$refs.file.files[0] !== null) {\n        this.newCategory.image1 = this.$refs.file.files[0];\n      } else {\n        this.newCategory.image1 = null;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAkCA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,eAAe;EACbC,IAAI,EAAE,iBADO;;EAEbC,IAAI,GAAE;IACJ,OAAM;MACJC,WAAW,EAAC;QACVF,IAAI,EAAE,EADI;QAEVG,MAAM,EAAE,IAFE;QAGVC,OAAO,EAAE;MAHC;IADR,CAAN;EAOD,CAVY;;EAWZC,OAAO,EAAC;IACPC,iBAAiB,GAAE;MACjB,IAAIC,QAAO,GAAI,IAAIC,QAAJ,EAAf;;MACA,IAAI,KAAKN,WAAL,CAAiBC,MAAjB,KAA4B,IAAhC,EAAqC;QACnCI,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAAyB,KAAKP,WAAL,CAAiBC,MAA1C;MACF;;MACAI,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAKP,WAAL,CAAiBF,IAAzC;MACAO,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B,KAAKP,WAAL,CAAiBE,OAA5C;MACAN,KAAK,CAACY,IAAN,CAAW,oCAAX,EAAgDH,QAAhD,EACK;QACCI,OAAO,EAAE;UACPC,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADpB;UAEP,gBAAgB;QAFT;MADV,CADL,EAMOC,IANP,CAMYC,QAAO,IAAK;QAClB,IAAIC,aAAJ;QACA,KAAKC,KAAL,CAAWC,IAAX,CAAgB;UACdC,KAAK,EAAC,IADQ;UAEdC,IAAI,EAAEL,QAAQ,CAACf,IAFD;UAGdqB,KAAK,EAAE,IAHO;UAIdC,IAAI,EAAC,SAJS;UAKdC,QAAQ,EAAC,SALK;UAMdC,gBAAgB,EAAE,IANJ;UAOdC,iBAAiB,EAAC,KAPJ;UAQdC,SAAS,EAAE,MAAM;YACfC,aAAa,CAACX,aAAD,CAAb;UACD;QAVa,CAAhB;QAWJY,UAAU,CAAC,YAAU;UACnB9B,MAAM,CAAC+B,IAAP,CAAY,WAAZ;QACD,CAFS,EAER,IAFQ,CAAV;MAGD,CAtBD,EAsBGC,KAtBH,CAsBSC,KAAI,IAAK;QAChB,IAAIf,aAAJ;QACA,KAAKC,KAAL,CAAWC,IAAX,CAAgB;UACdE,IAAI,EAAEW,KAAK,CAAChB,QAAN,CAAef,IAAf,CAAoBgC,OADZ;UAEdX,KAAK,EAAE,IAFO;UAGdF,KAAK,EAAC,IAHQ;UAIdG,IAAI,EAAC,OAJS;UAKdC,QAAQ,EAAC,SALK;UAMdC,gBAAgB,EAAE,IANJ;UAOdC,iBAAiB,EAAC,KAPJ;UAQdC,SAAS,EAAE,MAAM;YACfC,aAAa,CAACX,aAAD,CAAb;UACD;QAVa,CAAhB;MAWD,CAnCD;IAoCD,CA5CM;;IA6CPiB,UAAU,CAACC,CAAD,EAAI;MACZ,IAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,KAAhB,CAAsB,CAAtB,MAA6B,IAAhC,EAAqC;QACnC,KAAKpC,WAAL,CAAiBC,MAAjB,GAA2B,KAAKiC,KAAL,CAAWC,IAAX,CAAgBC,KAAhB,CAAsB,CAAtB,CAA3B;MACD,CAFD,MAEM;QACJ,KAAKpC,WAAL,CAAiBC,MAAjB,GAA2B,IAA3B;MACF;IACD;;EAnDM;AAXI,CAAf","names":["axios","router","name","data","newCategory","image1","content","methods","createNewCategory","formdata","FormData","append","post","headers","Authorization","localStorage","getItem","then","response","timerInterval","$swal","fire","toast","text","timer","icon","position","timerProgressBar","showConfirmButton","willClose","clearInterval","setTimeout","push","catch","error","message","uploadFile","e","$refs","file","files"],"sourceRoot":"","sources":["/Users/gurhankoz/Desktop/panel/src/views/Category/newCategoryView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n<!--  BAŞLIK  -->\n  <h2><i class=\"fa-solid fa-lines-leaning\"></i> Kategori > Ekle</h2>\n<!--  FORM-->\n  <form @submit.prevent=\"createNewCategory\">\n  <div class=\"animate__animated animate__fadeIn\">\n      <div class=\"mb-3\">\n      <label for=\"exampleFormControlInput1\" class=\"form-label\">Kategori Adı</label>\n      <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" v-model=\"newCategory.name\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"formFile\" class=\"form-label\">Resim</label>\n      <input class=\"form-control\" type=\"file\" id=\"formFile\" ref=\"file\" @change=\"uploadFile\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"exampleFormControlTextarea1\" class=\"form-label\">İçerik</label>\n      <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" v-model=\"newCategory.content\"></textarea>\n    </div>\n    <div class=\"newItemBtnGroup\">\n      <router-link\n          to=\"/category\"\n          class=\"btn closeBtn\"\n      >\n        İptal\n      </router-link>\n      <button class=\"btn kytBtn\" type=\"submit\">Kaydet</button>\n    </div>\n  </div>\n  </form>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport router from \"@/router\";\n\nexport default {\n  name: \"newCategoryView\",\n  data(){\n    return{\n      newCategory:{\n        name: '',\n        image1: null,\n        content: '',\n      }\n    }\n  },\n   methods:{\n    createNewCategory(){\n      let formdata = new FormData();\n      if (this.newCategory.image1 !== null){\n        formdata.append('image1',this.newCategory.image1)\n      }\n      formdata.append('name', this.newCategory.name)\n      formdata.append('content', this.newCategory.content)\n      axios.post('http://127.0.0.1:8000/api/category',formdata\n          ,{\n            headers: {\n              Authorization: \"Bearer \" + localStorage.getItem('token'),\n              'Content-Type': \"multipart/form-data; charset=utf-8\",\n            },\n          }).then(response => {\n            let timerInterval;\n            this.$swal.fire({\n              toast:true,\n              text: response.data,\n              timer: 1100,\n              icon:'success',\n              position:'top-end',\n              timerProgressBar: true,\n              showConfirmButton:false,\n              willClose: () => {\n                clearInterval(timerInterval)\n              }})\n        setTimeout(function(){\n          router.push(\"/category\");\n        },1600)\n      }).catch(error => {\n        let timerInterval;\n        this.$swal.fire({\n          text: error.response.data.message,\n          timer: 1000,\n          toast:true,\n          icon:'error',\n          position:'top-end',\n          timerProgressBar: true,\n          showConfirmButton:false,\n          willClose: () => {\n            clearInterval(timerInterval)\n          }})\n      })\n    },\n    uploadFile(e) {\n      if(this.$refs.file.files[0] !== null){\n        this.newCategory.image1  = this.$refs.file.files[0]\n      }else {\n        this.newCategory.image1  = null\n      }\n    },\n    },\n}\n</script>\n\n<style scoped>\n.newItemBtnGroup{\n  text-align: end;\n}\n.btn{\n  border: none;\n  transition: transform .2s;\n}\n.kytBtn{\n  font-size: 13px;\n  color: white;\n  background-color: rgba(29, 156, 226, 0.83) !important;\n  padding: 8px 10px;\n}\n.closeBtn{\n  font-size: 13px;\n  margin: 8px;\n}\n.kytBtn:hover{\n  background-color: #0d7cb9 !important;\n}\n.closeBtn:hover{\n  color: #dc3545;\n}\n</style>"]},"metadata":{},"sourceType":"module"}