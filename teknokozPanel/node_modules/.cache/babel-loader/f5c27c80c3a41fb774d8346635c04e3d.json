{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport homeView from \"@/views/homeView\";\nimport login from \"@/views/login\";\nimport categoryView from \"@/views/Category/categoryView\";\nimport newCategoryView from \"@/views/Category/newCategoryView\";\nimport categoryEditView from \"@/views/Category/categoryEditView\";\nimport store from \"@/store\";\nimport { mapActions } from 'vuex';\nlet isAuth = store.state.isAuth;\nconst routes = [{\n  path: '/login',\n  name: 'login',\n  component: login,\n\n  beforeEnter(to, from, next) {\n    if (to.name == 'login' && isAuth == true) {\n      next({\n        path: '/',\n        replace: true\n      });\n    }\n  }\n\n}, {\n  path: '/',\n  name: 'home',\n  component: homeView,\n  meta: {\n    isAuth: true\n  }\n}, {\n  path: '/category',\n  name: 'categoryView',\n  component: categoryView,\n  meta: {\n    isAuth: true\n  }\n}, {\n  path: '/newCategory',\n  name: 'newCategoryView',\n  component: newCategoryView,\n  meta: {\n    isAuth: true\n  }\n}, {\n  path: '/categoryEdit',\n  name: 'categoryEditView',\n  component: categoryEditView,\n  meta: {\n    isAuth: true\n  }\n}, {\n  path: '/:pathMatch(.*)*',\n  component: login\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  if (!to.meta.isAuth) {\n    console.log(isAuth);\n    console.log(\"Meta Yok Geçiş Var\");\n    next();\n  } else {\n    if (isAuth == true) {\n      console.log(\"Meta Var isAuth True Geçiş Var\");\n      next();\n    } else if (isAuth == false) {\n      console.log(\"Meta Var isAuth False Geçiş Yok\");\n      router.push(\"/login\");\n    } else {\n      console.log('Hiçbişi Yok');\n      router.push(\"/login\");\n    }\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","homeView","login","categoryView","newCategoryView","categoryEditView","store","mapActions","isAuth","state","routes","path","name","component","beforeEnter","to","from","next","replace","meta","router","history","process","env","BASE_URL","beforeEach","console","log","push"],"sources":["/Users/gurhankoz/Desktop/teknokozpanel/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport homeView from \"@/views/homeView\";\nimport login from \"@/views/login\";\nimport categoryView from \"@/views/Category/categoryView\";\nimport newCategoryView from \"@/views/Category/newCategoryView\";\nimport categoryEditView from \"@/views/Category/categoryEditView\";\nimport store from \"@/store\";\nimport { mapActions } from 'vuex'\nlet isAuth = store.state.isAuth;\nconst routes = [\n  {\n    path: '/login',\n    name: 'login',\n    component: login,\n    beforeEnter(to, from, next){\n      if ( to.name == 'login' && isAuth == true){\n        next({\n          path: '/',\n          replace: true\n        })\n      }\n    }\n  },\n  {\n    path: '/',\n    name: 'home',\n    component: homeView,\n    meta: {\n      isAuth : true,\n    }\n  },\n  {\n    path: '/category',\n    name: 'categoryView',\n    component: categoryView,\n    meta: {\n      isAuth : true\n    }\n  },\n  {\n    path: '/newCategory',\n    name: 'newCategoryView',\n    component: newCategoryView,\n    meta: {\n      isAuth : true\n    }\n  },\n  {\n    path: '/categoryEdit',\n    name: 'categoryEditView',\n    component: categoryEditView,\n    meta: {\n      isAuth : true\n    }\n  },\n  {\n    path:'/:pathMatch(.*)*',\n    component: login\n  },\n\n]\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nrouter.beforeEach((to,from,next) => {\n\n  if (!to.meta.isAuth){\n    console.log(isAuth);\n    console.log(\"Meta Yok Geçiş Var\");\n    next()\n  }else{\n      if(isAuth == true){\n        console.log(\"Meta Var isAuth True Geçiş Var\");\n        next()\n      }else if(isAuth == false){\n        console.log(\"Meta Var isAuth False Geçiş Yok\");\n        router.push(\"/login\");\n      }else {\n        console.log('Hiçbişi Yok')\n        router.push(\"/login\");\n      }\n  }\n\n})\n\nexport default router\n"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,gBAAvB,QAA+C,YAA/C;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,IAAIC,MAAM,GAAGF,KAAK,CAACG,KAAN,CAAYD,MAAzB;AACA,MAAME,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QADR;EAEEC,IAAI,EAAE,OAFR;EAGEC,SAAS,EAAEX,KAHb;;EAIEY,WAAW,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAgB;IACzB,IAAKF,EAAE,CAACH,IAAH,IAAW,OAAX,IAAsBJ,MAAM,IAAI,IAArC,EAA0C;MACxCS,IAAI,CAAC;QACHN,IAAI,EAAE,GADH;QAEHO,OAAO,EAAE;MAFN,CAAD,CAAJ;IAID;EACF;;AAXH,CADa,EAcb;EACEP,IAAI,EAAE,GADR;EAEEC,IAAI,EAAE,MAFR;EAGEC,SAAS,EAAEZ,QAHb;EAIEkB,IAAI,EAAE;IACJX,MAAM,EAAG;EADL;AAJR,CAda,EAsBb;EACEG,IAAI,EAAE,WADR;EAEEC,IAAI,EAAE,cAFR;EAGEC,SAAS,EAAEV,YAHb;EAIEgB,IAAI,EAAE;IACJX,MAAM,EAAG;EADL;AAJR,CAtBa,EA8Bb;EACEG,IAAI,EAAE,cADR;EAEEC,IAAI,EAAE,iBAFR;EAGEC,SAAS,EAAET,eAHb;EAIEe,IAAI,EAAE;IACJX,MAAM,EAAG;EADL;AAJR,CA9Ba,EAsCb;EACEG,IAAI,EAAE,eADR;EAEEC,IAAI,EAAE,kBAFR;EAGEC,SAAS,EAAER,gBAHb;EAIEc,IAAI,EAAE;IACJX,MAAM,EAAG;EADL;AAJR,CAtCa,EA8Cb;EACEG,IAAI,EAAC,kBADP;EAEEE,SAAS,EAAEX;AAFb,CA9Ca,CAAf;AAoDA,MAAMkB,MAAM,GAAGrB,YAAY,CAAC;EAC1BsB,OAAO,EAAErB,gBAAgB,CAACsB,OAAO,CAACC,GAAR,CAAYC,QAAb,CADC;EAE1Bd;AAF0B,CAAD,CAA3B;AAKAU,MAAM,CAACK,UAAP,CAAkB,CAACV,EAAD,EAAIC,IAAJ,EAASC,IAAT,KAAkB;EAElC,IAAI,CAACF,EAAE,CAACI,IAAH,CAAQX,MAAb,EAAoB;IAClBkB,OAAO,CAACC,GAAR,CAAYnB,MAAZ;IACAkB,OAAO,CAACC,GAAR,CAAY,oBAAZ;IACAV,IAAI;EACL,CAJD,MAIK;IACD,IAAGT,MAAM,IAAI,IAAb,EAAkB;MAChBkB,OAAO,CAACC,GAAR,CAAY,gCAAZ;MACAV,IAAI;IACL,CAHD,MAGM,IAAGT,MAAM,IAAI,KAAb,EAAmB;MACvBkB,OAAO,CAACC,GAAR,CAAY,iCAAZ;MACAP,MAAM,CAACQ,IAAP,CAAY,QAAZ;IACD,CAHK,MAGA;MACJF,OAAO,CAACC,GAAR,CAAY,aAAZ;MACAP,MAAM,CAACQ,IAAP,CAAY,QAAZ;IACD;EACJ;AAEF,CAnBD;AAqBA,eAAeR,MAAf"},"metadata":{},"sourceType":"module"}