{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport homeView from \"@/views/homeView\";\nimport login from \"@/views/login\";\nimport categoryView from \"@/views/Category/categoryView\";\nimport newCategoryView from \"@/views/Category/newCategoryView\";\nimport categoryEditView from \"@/views/Category/categoryEditView\";\nimport store from \"@/store\";\nconst routes = [{\n  path: '/login',\n  name: 'login',\n  component: login,\n\n  beforeEnter(to, from, next) {\n    if (to.name == 'login') {\n      if (store.state.isAuth == \"true\") {\n        next({});\n      }\n    }\n  }\n\n}, {\n  path: '/',\n  name: 'home',\n  component: homeView,\n  meta: {\n    isAuth: true\n  }\n}, {\n  path: '/category',\n  name: 'categoryView',\n  component: categoryView,\n  meta: {\n    isAuth: true\n  }\n}, {\n  path: '/newCategory',\n  name: 'newCategoryView',\n  component: newCategoryView,\n  meta: {\n    isAuth: true\n  }\n}, {\n  path: '/categoryEdit',\n  name: 'categoryEditView',\n  component: categoryEditView,\n  meta: {\n    isAuth: true\n  }\n}, {\n  path: '/:pathMatch(.*)*',\n  component: login\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  let isAuth = store.state.isAuth;\n\n  if (!to.meta.isAuth) {\n    console.log(isAuth);\n    console.log(\"Meta Yok Geçiş Var\");\n    next();\n  } else {\n    if (isAuth == true) {\n      console.log(\"Meta Var isAuth True Geçiş Var\");\n      next();\n    } else if (isAuth == false) {\n      console.log(\"Meta Var isAuth False Geçiş Yok\");\n      router.push(\"/login\");\n    } else {\n      console.log('Hiçbişi Yok');\n      router.push(\"/login\");\n    }\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","homeView","login","categoryView","newCategoryView","categoryEditView","store","routes","path","name","component","beforeEnter","to","from","next","state","isAuth","meta","router","history","process","env","BASE_URL","beforeEach","console","log","push"],"sources":["/Users/gurhankoz/Desktop/teknokoz/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport homeView from \"@/views/homeView\";\nimport login from \"@/views/login\";\nimport categoryView from \"@/views/Category/categoryView\";\nimport newCategoryView from \"@/views/Category/newCategoryView\";\nimport categoryEditView from \"@/views/Category/categoryEditView\";\nimport store from \"@/store\";\n\nconst routes = [\n  {\n    path: '/login',\n    name: 'login',\n    component: login,\n    beforeEnter(to,from,next){\n      if( to.name == 'login'){\n        if(store.state.isAuth == \"true\"){\n          next({\n            \n          })\n        }\n      }\n    }\n  },\n  {\n    path: '/',\n    name: 'home',\n    component: homeView,\n    meta: {\n      isAuth : true,\n    }\n  },\n  {\n    path: '/category',\n    name: 'categoryView',\n    component: categoryView,\n    meta: {\n      isAuth : true\n    }\n  },\n  {\n    path: '/newCategory',\n    name: 'newCategoryView',\n    component: newCategoryView,\n    meta: {\n      isAuth : true\n    }\n  },\n  {\n    path: '/categoryEdit',\n    name: 'categoryEditView',\n    component: categoryEditView,\n    meta: {\n      isAuth : true\n    }\n  },\n  {\n    path:'/:pathMatch(.*)*',\n    component: login\n  },\n\n]\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nrouter.beforeEach((to,from,next) => {\n  let isAuth = store.state.isAuth;\n  if (!to.meta.isAuth){\n    console.log(isAuth);\n    console.log(\"Meta Yok Geçiş Var\");\n    next()\n  }else{\n      if(isAuth == true){\n        console.log(\"Meta Var isAuth True Geçiş Var\");\n        next()\n      }else if(isAuth == false){\n        console.log(\"Meta Var isAuth False Geçiş Yok\");\n        router.push(\"/login\");\n      }else {\n        console.log('Hiçbişi Yok')\n        router.push(\"/login\");\n      }\n  }\n\n})\n\nexport default router\n"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,gBAAvB,QAA+C,YAA/C;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QADR;EAEEC,IAAI,EAAE,OAFR;EAGEC,SAAS,EAAER,KAHb;;EAIES,WAAW,CAACC,EAAD,EAAIC,IAAJ,EAASC,IAAT,EAAc;IACvB,IAAIF,EAAE,CAACH,IAAH,IAAW,OAAf,EAAuB;MACrB,IAAGH,KAAK,CAACS,KAAN,CAAYC,MAAZ,IAAsB,MAAzB,EAAgC;QAC9BF,IAAI,CAAC,EAAD,CAAJ;MAGD;IACF;EACF;;AAZH,CADa,EAeb;EACEN,IAAI,EAAE,GADR;EAEEC,IAAI,EAAE,MAFR;EAGEC,SAAS,EAAET,QAHb;EAIEgB,IAAI,EAAE;IACJD,MAAM,EAAG;EADL;AAJR,CAfa,EAuBb;EACER,IAAI,EAAE,WADR;EAEEC,IAAI,EAAE,cAFR;EAGEC,SAAS,EAAEP,YAHb;EAIEc,IAAI,EAAE;IACJD,MAAM,EAAG;EADL;AAJR,CAvBa,EA+Bb;EACER,IAAI,EAAE,cADR;EAEEC,IAAI,EAAE,iBAFR;EAGEC,SAAS,EAAEN,eAHb;EAIEa,IAAI,EAAE;IACJD,MAAM,EAAG;EADL;AAJR,CA/Ba,EAuCb;EACER,IAAI,EAAE,eADR;EAEEC,IAAI,EAAE,kBAFR;EAGEC,SAAS,EAAEL,gBAHb;EAIEY,IAAI,EAAE;IACJD,MAAM,EAAG;EADL;AAJR,CAvCa,EA+Cb;EACER,IAAI,EAAC,kBADP;EAEEE,SAAS,EAAER;AAFb,CA/Ca,CAAf;AAqDA,MAAMgB,MAAM,GAAGnB,YAAY,CAAC;EAC1BoB,OAAO,EAAEnB,gBAAgB,CAACoB,OAAO,CAACC,GAAR,CAAYC,QAAb,CADC;EAE1Bf;AAF0B,CAAD,CAA3B;AAKAW,MAAM,CAACK,UAAP,CAAkB,CAACX,EAAD,EAAIC,IAAJ,EAASC,IAAT,KAAkB;EAClC,IAAIE,MAAM,GAAGV,KAAK,CAACS,KAAN,CAAYC,MAAzB;;EACA,IAAI,CAACJ,EAAE,CAACK,IAAH,CAAQD,MAAb,EAAoB;IAClBQ,OAAO,CAACC,GAAR,CAAYT,MAAZ;IACAQ,OAAO,CAACC,GAAR,CAAY,oBAAZ;IACAX,IAAI;EACL,CAJD,MAIK;IACD,IAAGE,MAAM,IAAI,IAAb,EAAkB;MAChBQ,OAAO,CAACC,GAAR,CAAY,gCAAZ;MACAX,IAAI;IACL,CAHD,MAGM,IAAGE,MAAM,IAAI,KAAb,EAAmB;MACvBQ,OAAO,CAACC,GAAR,CAAY,iCAAZ;MACAP,MAAM,CAACQ,IAAP,CAAY,QAAZ;IACD,CAHK,MAGA;MACJF,OAAO,CAACC,GAAR,CAAY,aAAZ;MACAP,MAAM,CAACQ,IAAP,CAAY,QAAZ;IACD;EACJ;AAEF,CAnBD;AAqBA,eAAeR,MAAf"},"metadata":{},"sourceType":"module"}