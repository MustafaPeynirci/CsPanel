{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport homeView from \"@/views/homeView\";\nimport login from \"@/views/login\";\nimport categoryView from \"@/views/Category/categoryView\";\nimport newCategoryView from \"@/views/Category/newCategoryView\";\nimport categoryEditView from \"@/views/Category/categoryEditView\";\nimport store from \"@/store\";\nlet isAuth = store.state.isAuth;\nconst routes = [{\n  path: '/login',\n  name: 'login',\n  component: login,\n\n  beforeEnter(to, from, next) {\n    if (to.name !== 'login' && !this.isloggedin) {\n      next({\n        path: 'login',\n        replace: true\n      });\n    } else {\n      next();\n    }\n  }\n\n}, {\n  path: '/',\n  name: 'home',\n  component: homeView,\n  meta: {\n    isAuth: true\n  }\n}, {\n  path: '/category',\n  name: 'categoryView',\n  component: categoryView,\n  meta: {\n    isAuth: true\n  }\n}, {\n  path: '/newCategory',\n  name: 'newCategoryView',\n  component: newCategoryView,\n  meta: {\n    isAuth: true\n  }\n}, {\n  path: '/categoryEdit',\n  name: 'categoryEditView',\n  component: categoryEditView,\n  meta: {\n    isAuth: true\n  }\n}, {\n  path: '/:pathMatch(.*)*',\n  component: login\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  if (!to.meta.isAuth) {\n    console.log(isAuth);\n    console.log(\"Meta Yok Geçiş Var\");\n    next();\n  } else {\n    if (isAuth == true) {\n      console.log(\"Meta Var isAuth True Geçiş Var\");\n      next();\n    } else if (isAuth == false) {\n      console.log(\"Meta Var isAuth False Geçiş Yok\");\n      router.push(\"/login\");\n    } else {\n      console.log('Hiçbişi Yok');\n      router.push(\"/login\");\n    }\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","homeView","login","categoryView","newCategoryView","categoryEditView","store","isAuth","state","routes","path","name","component","beforeEnter","to","from","next","isloggedin","replace","meta","router","history","process","env","BASE_URL","beforeEach","console","log","push"],"sources":["/Users/gurhankoz/Desktop/teknokoz/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport homeView from \"@/views/homeView\";\nimport login from \"@/views/login\";\nimport categoryView from \"@/views/Category/categoryView\";\nimport newCategoryView from \"@/views/Category/newCategoryView\";\nimport categoryEditView from \"@/views/Category/categoryEditView\";\nimport store from \"@/store\";\nlet isAuth = store.state.isAuth;\nconst routes = [\n  {\n    path: '/login',\n    name: 'login',\n    component: login,\n    beforeEnter(to, from, next){\n      if ( to.name !== 'login' && !this.isloggedin ){\n        next({\n          path: 'login',\n          replace: true\n        })\n      } else {\n        next()\n      }\n    }\n  },\n  {\n    path: '/',\n    name: 'home',\n    component: homeView,\n    meta: {\n      isAuth : true,\n    }\n  },\n  {\n    path: '/category',\n    name: 'categoryView',\n    component: categoryView,\n    meta: {\n      isAuth : true\n    }\n  },\n  {\n    path: '/newCategory',\n    name: 'newCategoryView',\n    component: newCategoryView,\n    meta: {\n      isAuth : true\n    }\n  },\n  {\n    path: '/categoryEdit',\n    name: 'categoryEditView',\n    component: categoryEditView,\n    meta: {\n      isAuth : true\n    }\n  },\n  {\n    path:'/:pathMatch(.*)*',\n    component: login\n  },\n\n]\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nrouter.beforeEach((to,from,next) => {\n\n  if (!to.meta.isAuth){\n    console.log(isAuth);\n    console.log(\"Meta Yok Geçiş Var\");\n    next()\n  }else{\n      if(isAuth == true){\n        console.log(\"Meta Var isAuth True Geçiş Var\");\n        next()\n      }else if(isAuth == false){\n        console.log(\"Meta Var isAuth False Geçiş Yok\");\n        router.push(\"/login\");\n      }else {\n        console.log('Hiçbişi Yok')\n        router.push(\"/login\");\n      }\n  }\n\n})\n\nexport default router\n"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,gBAAvB,QAA+C,YAA/C;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,IAAIC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAYD,MAAzB;AACA,MAAME,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QADR;EAEEC,IAAI,EAAE,OAFR;EAGEC,SAAS,EAAEV,KAHb;;EAIEW,WAAW,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAgB;IACzB,IAAKF,EAAE,CAACH,IAAH,KAAY,OAAZ,IAAuB,CAAC,KAAKM,UAAlC,EAA8C;MAC5CD,IAAI,CAAC;QACHN,IAAI,EAAE,OADH;QAEHQ,OAAO,EAAE;MAFN,CAAD,CAAJ;IAID,CALD,MAKO;MACLF,IAAI;IACL;EACF;;AAbH,CADa,EAgBb;EACEN,IAAI,EAAE,GADR;EAEEC,IAAI,EAAE,MAFR;EAGEC,SAAS,EAAEX,QAHb;EAIEkB,IAAI,EAAE;IACJZ,MAAM,EAAG;EADL;AAJR,CAhBa,EAwBb;EACEG,IAAI,EAAE,WADR;EAEEC,IAAI,EAAE,cAFR;EAGEC,SAAS,EAAET,YAHb;EAIEgB,IAAI,EAAE;IACJZ,MAAM,EAAG;EADL;AAJR,CAxBa,EAgCb;EACEG,IAAI,EAAE,cADR;EAEEC,IAAI,EAAE,iBAFR;EAGEC,SAAS,EAAER,eAHb;EAIEe,IAAI,EAAE;IACJZ,MAAM,EAAG;EADL;AAJR,CAhCa,EAwCb;EACEG,IAAI,EAAE,eADR;EAEEC,IAAI,EAAE,kBAFR;EAGEC,SAAS,EAAEP,gBAHb;EAIEc,IAAI,EAAE;IACJZ,MAAM,EAAG;EADL;AAJR,CAxCa,EAgDb;EACEG,IAAI,EAAC,kBADP;EAEEE,SAAS,EAAEV;AAFb,CAhDa,CAAf;AAsDA,MAAMkB,MAAM,GAAGrB,YAAY,CAAC;EAC1BsB,OAAO,EAAErB,gBAAgB,CAACsB,OAAO,CAACC,GAAR,CAAYC,QAAb,CADC;EAE1Bf;AAF0B,CAAD,CAA3B;AAKAW,MAAM,CAACK,UAAP,CAAkB,CAACX,EAAD,EAAIC,IAAJ,EAASC,IAAT,KAAkB;EAElC,IAAI,CAACF,EAAE,CAACK,IAAH,CAAQZ,MAAb,EAAoB;IAClBmB,OAAO,CAACC,GAAR,CAAYpB,MAAZ;IACAmB,OAAO,CAACC,GAAR,CAAY,oBAAZ;IACAX,IAAI;EACL,CAJD,MAIK;IACD,IAAGT,MAAM,IAAI,IAAb,EAAkB;MAChBmB,OAAO,CAACC,GAAR,CAAY,gCAAZ;MACAX,IAAI;IACL,CAHD,MAGM,IAAGT,MAAM,IAAI,KAAb,EAAmB;MACvBmB,OAAO,CAACC,GAAR,CAAY,iCAAZ;MACAP,MAAM,CAACQ,IAAP,CAAY,QAAZ;IACD,CAHK,MAGA;MACJF,OAAO,CAACC,GAAR,CAAY,aAAZ;MACAP,MAAM,CAACQ,IAAP,CAAY,QAAZ;IACD;EACJ;AAEF,CAnBD;AAqBA,eAAeR,MAAf"},"metadata":{},"sourceType":"module"}