{"ast":null,"code":"import router from \"@/router\";\nimport axios from \"axios\";\nexport default {\n  name: \"categoryEditView\",\n\n  data() {\n    return {\n      editCategory: {\n        name: '',\n        image: '',\n        content: '',\n        image1: ''\n      }\n    };\n  },\n\n  methods: {\n    updateCategory() {\n      if (this.editCategory.image1 !== '') {} else {\n        this.editCategory.image1 = this.editCategory.image.split('http://127.0.0.1:8000/images/categories/');\n      }\n\n      axios.postForm('http://127.0.0.1:8000/api/category/' + this.$route.params.id, {\n        name: this.editCategory.name,\n        content: this.editCategory.content,\n        image1: this.editCategory.image1,\n        _method: \"PUT\"\n      }, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem('token'),\n          'Content-Type': \"multipart/form-data; charset=utf-8\"\n        }\n      }).then(response => {\n        let timerInterval;\n        this.$swal.fire({\n          text: response.data,\n          timer: 1000,\n          toast: true,\n          position: 'top-end',\n          icon: 'success',\n          timerProgressBar: true,\n          showConfirmButton: false,\n          willClose: () => {\n            clearInterval(timerInterval);\n          }\n        });\n        setTimeout(function () {\n          router.push(\"/category\");\n        }, 1600);\n      }).catch(error => {\n        let timerInterval;\n        this.$swal.fire({\n          text: error.response.data.message,\n          timer: 1000,\n          toast: true,\n          position: 'top-end',\n          icon: 'error',\n          timerProgressBar: true,\n          showConfirmButton: false,\n          willClose: () => {\n            clearInterval(timerInterval);\n          }\n        });\n      });\n    },\n\n    uploadFile(e) {\n      if (this.$refs.file.files[0] !== null) {\n        this.editCategory.image1 = this.$refs.file.files[0];\n      }\n    }\n\n  },\n  computed: {\n    getEditCategory() {\n      axios.get('http://127.0.0.1:8000/api/category/' + this.$route.params.id, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem('token')\n        }\n      }).then(response => {\n        this.editCategory.name = response.data.name;\n        this.editCategory.content = response.data.content;\n        this.editCategory.image = response.data.image;\n      });\n    }\n\n  },\n\n  mounted() {\n    this.getEditCategory;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["router","axios","name","data","editCategory","image","content","image1","methods","updateCategory","split","postForm","$route","params","id","_method","headers","Authorization","localStorage","getItem","then","response","timerInterval","$swal","fire","text","timer","toast","position","icon","timerProgressBar","showConfirmButton","willClose","clearInterval","setTimeout","push","catch","error","message","uploadFile","e","$refs","file","files","computed","getEditCategory","get","mounted"],"sourceRoot":"","sources":["/Users/gurhankoz/Desktop/teknokozPanel/src/views/Category/categoryEditView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n<!--  BAŞLIK-->\n    <h2><i class=\"fa-solid fa-lines-leaning\"></i> Kategori > Düzenle</h2>\n<!--  FORM-->\n    <div class=\"animate__animated animate__fadeIn\">\n    <div class=\"mb-3\">\n    <label for=\"exampleFormControlInput1\" class=\"form-label\"> Kategori Adı</label>\n    <input type=\"email\" class=\"form-control\" id=\"exampleFormControlInput1\" v-model=\"this.editCategory.name\" >\n    </div>\n    <div class=\"mb-3\">\n    <label for=\"formFile\" class=\"form-label\">Resim</label>\n    <div class=\"img-input\">\n    <img :src=\"this.editCategory.image\" class=\"img\" alt=\"\">\n    <input class=\"form-control change-img-input\" type=\"file\" id=\"formFile\" ref=\"file\" @change=\"uploadFile\" >\n    </div>\n    </div>\n    <div class=\"mb-3\">\n    <label for=\"exampleFormControlTextarea1\" class=\"form-label\">İçerik</label>\n    <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" v-model=\"this.editCategory.content\" ></textarea>\n    </div>\n    <div class=\"newItemBtnGroup\">\n    <router-link\n    to=\"/category\"\n    class=\"btn closeBtn\"\n    >\n    İptal\n    </router-link>\n    <button class=\"btn kytBtn\" @click=\"updateCategory\">Düzenle</button>\n    </div>\n    </div>\n  </div>\n</template>\n<script>\nimport router from \"@/router\";\nimport axios from \"axios\";\nexport default {\n  name: \"categoryEditView\",\n  data(){\n    return{\n      editCategory:{\n        name: '',\n        image: '',\n        content: '',\n        image1: '',\n      },\n    }\n  },\n  methods:{\n    updateCategory(){\n      if (this.editCategory.image1 !== ''){\n      }else {\n        this.editCategory.image1 = this.editCategory.image.split('http://127.0.0.1:8000/images/categories/');\n      }\n      axios.postForm('http://127.0.0.1:8000/api/category/'+this.$route.params.id,\n          {\n            name: this.editCategory.name,\n            content: this.editCategory.content,\n            image1: this.editCategory.image1,\n            _method: \"PUT\"\n          }\n          ,\n          {\n            headers: {\n              Authorization: \"Bearer \" + localStorage.getItem('token'),\n              'Content-Type': \"multipart/form-data; charset=utf-8\",\n            }\n          }).then(response =>{\n        let timerInterval;\n        this.$swal.fire({\n          text: response.data,\n          timer: 1000,\n          toast:true,\n          position:'top-end',\n          icon:'success',\n          timerProgressBar: true,\n          showConfirmButton:false,\n          willClose: () => {\n            clearInterval(timerInterval)\n          }})\n        setTimeout(function(){\n          router.push(\"/category\");\n        },1600)\n      }).catch(error => {\n        let timerInterval;\n        this.$swal.fire({\n          text: error.response.data.message,\n          timer: 1000,\n          toast:true,\n          position:'top-end',\n          icon:'error',\n          timerProgressBar: true,\n          showConfirmButton:false,\n          willClose: () => {\n            clearInterval(timerInterval)\n          }})\n      })\n    },\n    uploadFile(e) {\n      if(this.$refs.file.files[0] !== null){\n        this.editCategory.image1  = this.$refs.file.files[0]\n      }\n    },\n  },\n  computed:{\n    getEditCategory(){\n      axios.get('http://127.0.0.1:8000/api/category/' + this.$route.params.id,\n          {\n            headers: {\n              Authorization: \"Bearer \" + localStorage.getItem('token'),\n            }\n          }).then(response => {\n          this.editCategory.name = response.data.name;\n          this.editCategory.content = response.data.content;\n          this.editCategory.image = response.data.image;\n      })\n    }\n  },\n  mounted() {\n    this.getEditCategory;\n  }\n}\n</script>\n<style scoped>\n.newItemBtnGroup{\n  text-align: end;\n}\n.btn{\n  border: none;\n  transition: transform .2s;\n}\n.kytBtn{\n  font-size: 13px;\n  color: white;\n  background-color: rgba(29, 156, 226, 0.83) !important;\n  padding: 8px 10px;\n}\n.closeBtn{\n  font-size: 13px;\n  margin: 8px;\n}\n.kytBtn:hover{\n  background-color: #0d7cb9 !important;\n}\n.closeBtn:hover{\n  color: #dc3545;\n}\n.img{\n  width: 300px;\n  height: 250px;\n  border-radius: 5px;\n  object-fit: cover;\n}\n.img-input{\n  display: flex;\n  flex-direction: row;\n}\n.change-img-input{\n  width: 500px;\n  height: 35px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}