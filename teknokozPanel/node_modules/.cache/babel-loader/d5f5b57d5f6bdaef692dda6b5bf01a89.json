{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from \"axios\";\nexport default createStore({\n  state: {\n    token: '',\n    authOk: false,\n    grant_type: 'password',\n    scope: '',\n    client_id: 4,\n    client_secret: '1cDfYZfMmZ69JF5iWHlkJsTt158qDmcjDHtfeeny'\n  },\n  getters: {\n    isAuth(state) {\n      return state.authOk;\n    }\n\n  },\n  mutations: {\n    setToken(state, token) {\n      state.token = token;\n      state.authOk = true;\n    },\n\n    clearToken(state) {\n      state.token = '';\n    }\n\n  },\n  actions: {\n    login({\n      commit,\n      dispatch,\n      state\n    }, authData) {\n      return axios.post('http://127.0.0.1:8000/oauth/token', {\n        username: authData.email,\n        password: authData.password,\n        grant_type: state.grant_type,\n        scope: state.scope,\n        client_id: state.client_id,\n        client_secret: state.client_secret\n      }).then(response => {\n        commit(\"setToken\", response.data.access_token);\n      });\n    },\n\n    logOut({\n      commit,\n      dispatch,\n      state\n    }) {}\n\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","axios","state","token","authOk","grant_type","scope","client_id","client_secret","getters","isAuth","mutations","setToken","clearToken","actions","login","commit","dispatch","authData","post","username","email","password","then","response","data","access_token","logOut","modules"],"sources":["/Users/gurhankoz/Desktop/teknokozpanel/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport axios from \"axios\";\n\nexport default createStore({\n  state: {\n    token: '',\n    authOk: false,\n    grant_type: 'password',\n    scope: '',\n    client_id: 4,\n    client_secret: '1cDfYZfMmZ69JF5iWHlkJsTt158qDmcjDHtfeeny' ,\n  },\n  getters: {\n    isAuth(state){\n      return state.authOk;\n    },\n  },\n  mutations: {\n    setToken(state,token){\n      state.token = token;\n      state.authOk=true;\n    },\n    clearToken(state){\n      state.token = ''\n    },\n  },\n  actions: {\n    login({commit,dispatch,state},authData){\n      return axios.post(\n          'http://127.0.0.1:8000/oauth/token',\n          {\n            username: authData.email,\n            password: authData.password,\n            grant_type: state.grant_type,\n            scope: state.scope,\n            client_id: state.client_id,\n            client_secret: state.client_secret,\n          }).then(response => {\n            commit(\"setToken\",response.data.access_token);\n      })\n    },\n    logOut({commit,dispatch,state}){\n\n    },\n  },\n  modules: {\n  }\n})\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,KAAK,EAAE,EADF;IAELC,MAAM,EAAE,KAFH;IAGLC,UAAU,EAAE,UAHP;IAILC,KAAK,EAAE,EAJF;IAKLC,SAAS,EAAE,CALN;IAMLC,aAAa,EAAE;EANV,CADkB;EASzBC,OAAO,EAAE;IACPC,MAAM,CAACR,KAAD,EAAO;MACX,OAAOA,KAAK,CAACE,MAAb;IACD;;EAHM,CATgB;EAczBO,SAAS,EAAE;IACTC,QAAQ,CAACV,KAAD,EAAOC,KAAP,EAAa;MACnBD,KAAK,CAACC,KAAN,GAAcA,KAAd;MACAD,KAAK,CAACE,MAAN,GAAa,IAAb;IACD,CAJQ;;IAKTS,UAAU,CAACX,KAAD,EAAO;MACfA,KAAK,CAACC,KAAN,GAAc,EAAd;IACD;;EAPQ,CAdc;EAuBzBW,OAAO,EAAE;IACPC,KAAK,CAAC;MAACC,MAAD;MAAQC,QAAR;MAAiBf;IAAjB,CAAD,EAAyBgB,QAAzB,EAAkC;MACrC,OAAOjB,KAAK,CAACkB,IAAN,CACH,mCADG,EAEH;QACEC,QAAQ,EAAEF,QAAQ,CAACG,KADrB;QAEEC,QAAQ,EAAEJ,QAAQ,CAACI,QAFrB;QAGEjB,UAAU,EAAEH,KAAK,CAACG,UAHpB;QAIEC,KAAK,EAAEJ,KAAK,CAACI,KAJf;QAKEC,SAAS,EAAEL,KAAK,CAACK,SALnB;QAMEC,aAAa,EAAEN,KAAK,CAACM;MANvB,CAFG,EASAe,IATA,CASKC,QAAQ,IAAI;QAClBR,MAAM,CAAC,UAAD,EAAYQ,QAAQ,CAACC,IAAT,CAAcC,YAA1B,CAAN;MACL,CAXM,CAAP;IAYD,CAdM;;IAePC,MAAM,CAAC;MAACX,MAAD;MAAQC,QAAR;MAAiBf;IAAjB,CAAD,EAAyB,CAE9B;;EAjBM,CAvBgB;EA0CzB0B,OAAO,EAAE;AA1CgB,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}